/*
 * Sample API
 *
 * Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
 *
 * API version: 0.1.9
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package usersapi

import (
	"context"
	"reflect"
	"testing"
)

func TestNewDefaultApiService(t *testing.T) {
	tests := []struct {
		name string
		want DefaultApiServicer
	}{
		// TODO: Add test cases.
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := NewDefaultApiService(); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("NewDefaultApiService() = %v, want %v", got, tt.want)
			}
		})
	}
}

func TestDefaultApiService_UsersGet(t *testing.T) {
	type args struct {
		ctx context.Context
	}
	tests := []struct {
		name    string
		s       *DefaultApiService
		args    args
		want    ImplResponse
		wantErr bool
	}{
		// TODO: Add test cases.
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			s := &DefaultApiService{}
			got, err := s.UsersGet(tt.args.ctx)
			if (err != nil) != tt.wantErr {
				t.Errorf("DefaultApiService.UsersGet() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("DefaultApiService.UsersGet() = %v, want %v", got, tt.want)
			}
		})
	}
}

func TestDefaultApiService_UsersPost(t *testing.T) {
	type args struct {
		ctx  context.Context
		user User
	}
	tests := []struct {
		name    string
		s       *DefaultApiService
		args    args
		want    ImplResponse
		wantErr bool
	}{
		// TODO: Add test cases.
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			s := &DefaultApiService{}
			got, err := s.UsersPost(tt.args.ctx, tt.args.user)
			if (err != nil) != tt.wantErr {
				t.Errorf("DefaultApiService.UsersPost() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("DefaultApiService.UsersPost() = %v, want %v", got, tt.want)
			}
		})
	}
}
